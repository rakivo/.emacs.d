;; Object semanticdb-project-database-file-18969a7a368e
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-18969a7a368e"
  :tables
  (list
    (semanticdb-table "semanticdb-table-18969a7a362e"
      :major-mode c-mode
      :tags 
        '( ("gen.h" include nil nil [1 17])
            ("LANGS" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :default-value "{
    \"c\", \"rs\", \"cpp\", \"js\", \"go\", \"php\", \"pas\", \"kt\", \"py\", \"lua\"
}"
                :type "char")
                nil [19 126])
            ("lang_check" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("lang" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [228 245]))                  
                :type "int")
                nil [206 390])
            ("LANG_NAME_CONFLICT" variable (:constant-flag t) nil [400 418])
            ("check_conficts" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("file_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [540 562])
                    ("lang" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [563 580])
                    ("dir" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [581 599]))                  
                :type "int")
                nil [514 910])
            ("generate" function
               (:typemodifiers ("static")
                :arguments 
                  ( ("fptr" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [988 1000])
                    ("file_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1001 1023])
                    ("file" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1024 1044])
                    ("dir" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1045 1063])
                    ("idx" variable
                       (:pointer 1
                        :constant-flag t
                        :type "int")
                        (reparse-symbol arg-sub-list) [1064 1085]))                  
                :type "void")
                nil [967 1479])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [1490 1499])
                    ("argv" variable
                       (:pointer 2
                        :type "char")
                        (reparse-symbol arg-sub-list) [1500 1512]))                  
                :type "int")
                nil [1481 2902]))          
      :file "main.c"
      :pointmax 2903
      :fsize 2354
      :lastmodtime '(26078 11433 507117 586000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-18969a7a364e"
      :major-mode c-mode
      :tags 
        '( ("sys/stat.h" include (:system-flag t) nil [1 22])
            ("stdio.h" include (:system-flag t) nil [23 41])
            ("stdlib.h" include (:system-flag t) nil [42 61])
            ("string.h" include (:system-flag t) nil [62 81])
            ("DIR_CAP" variable (:constant-flag t) nil [91 98])
            ("FILE_CAP" variable (:constant-flag t) nil [115 123])
            ("SAMPLE_CAP" variable (:constant-flag t) nil [139 149])
            ("SAMPLES_CAP" variable (:constant-flag t) nil [163 174])
            ("LANGS_CAP" variable (:constant-flag t) nil [185 194])
            ("ALL_SET" variable (:constant-flag t) nil [209 216])
            ("LANG_NAME_CONFLICT" variable (:constant-flag t) nil [337 355])
            ("fprintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [231 238]))                  
                :type "int")
                nil [223 253])
            ("fprintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [268 275]))                  
                :type "int")
                nil [260 290])
            ("fprintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [305 312]))                  
                :type "int")
                nil [297 327])
            ("LANG_NAME_CONFLICT" variable (:constant-flag t) nil [337 355])
            ("CREATING" variable (:constant-flag t) nil [465 473])
            ("fprintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [516 523]))                  
                :type "int")
                nil [508 556])
            ("fprintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [571 578])
                    ("" variable (:type ("file_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [604 614])
                    ("" variable (:type ("extens" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [615 622])
                    ("" variable (:type ("content" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [623 631]))                  
                :type "int")
                nil [563 632])
            ("LANGS" variable
               (:pointer 1
                :dereference 1
                :typemodifiers ("extern")
                :constant-flag t
                :type "char")
                nil [636 678])
            ("is_dir_exists" function
               (:prototype-flag t
                :arguments 
                  ( ("dir_path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [698 719])
                    ("info" variable
                       (:pointer 1
                        :type ("stat" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [720 738]))                  
                :type "int")
                nil [680 739])
            ("create_dir_" function
               (:prototype-flag t
                :arguments 
                  ( ("dir_path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [756 777]))                  
                :type "int")
                nil [740 778])
            ("create_dirs" function
               (:prototype-flag t
                :arguments 
                  ( ("dir_path" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [795 816]))                  
                :type "int")
                nil [779 817])
            ("gen" function
               (:prototype-flag t
                :arguments 
                  ( ("fptr" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [828 840])
                    ("file_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [841 863])
                    ("dir" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [864 882])
                    ("extens" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [883 902])
                    ("idx" variable
                       (:pointer 1
                        :constant-flag t
                        :type "int")
                        (reparse-symbol arg-sub-list) [903 924]))                  
                :type "void")
                nil [819 925]))          
      :file "gen.h"
      :pointmax 926
      :fsize 925
      :lastmodtime '(26078 11754 925730 985000)
      :unmatched-syntax nil
      :lexical-table 
        '(("SAMPLE_CAP" . ((number "256" 151 . 154)))
          ("DIR_CAP" . ((number "128" 103 . 106)))
          ("FILE_CAP" . ((number "256" 127 . 130)))
          ("SAMPLES_CAP" . ((number "9" 175 . 176)))
          ("LANG_NAME_CONFLICT" (spp-arg-list ("lang" "file_name") 355 . 372) . 
              ((symbol "fprintf" 373 . 380) (semantic-list "(stderr, \"ERROR: lang: %s, and name: %s is a conflict\\n\", lang, file_name)" 380 . 454) (punctuation ";" 454 . 455)))
          ("CREATING" (spp-arg-list ("file_name" "extens" "content") 446 . 474) . 
              ((symbol "fprintf" 481 . 488) (semantic-list "(stdout, \"<========================>\\n\")" 488 . 528) (punctuation ";" 528 . 529) (symbol "fprintf" 536 . 543) (semantic-list "(stdout, \"Creating %s.%s:\\n%s\\n\", file_name, extens, content)" 543 . 604) (punctuation ";" 604 . 605) (symbol "fprintf" 612 . 619) (semantic-list "(stdout, \"<========================>\\n\")" 619 . 659) (punctuation ";" 659 . 660)))
          ("LANGS_CAP" . ((number "10" 197 . 199)))
          ("ALL_SET" . 
              ((symbol "fprintf" 223 . 230) (semantic-list "(stdout, \"All set!\\n\")" 230 . 252) (punctuation ";" 252 . 253) (symbol "fprintf" 260 . 267) (semantic-list "(stdout, \"<================>\\n\")" 267 . 299) (punctuation ";" 299 . 300)))
          )
)
    (semanticdb-table "semanticdb-table-18969a7a366e"
      :major-mode c-mode
      :tags 
        '( ("gen.h" include nil nil [1 17])
            ("TOML_MOD_SAMPLE" variable (:constant-flag t) nil [27 42])
            ("TOML_MOD_SAMPLE" variable (:constant-flag t) nil [27 42])
            ("GO_MOD_SAMPLE" variable (:constant-flag t) nil [183 196])
            ("SET_MOD" variable (:constant-flag t) nil [233 240])
            ("SET_MOD" variable (:constant-flag t) nil [233 240])
            ("SET_MOD" variable (:constant-flag t) nil [233 240])
            ("SET_MOD" variable (:constant-flag t) nil [233 240])
            ("SET_MOD" variable (:constant-flag t) nil [233 240])
            ("SET_SAMPLE" variable (:constant-flag t) nil [317 327])
            ("CREATING" variable (:constant-flag t) nil [590 598])
            ("fprintf" function
               (:prototype-flag t
                :arguments 
                  ( ("" variable (:type ("stdout" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [635 642])
                    ("" variable (:type ("file_name" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [670 680])
                    ("" variable (:type ("extens" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [681 688])
                    ("" variable (:type ("content" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [689 697]))                  
                :type "int")
                nil [627 698])
            ("SAMPLES" variable
               (:pointer 1
                :dereference 1
                :constant-flag t
                :default-value "{
    \"#include <stdio.h>\\n\\nint main(void) {\\n    printf(\\\"hello, world\\\\n\\\");\\n    return 0;\\n}\",
    \"fn main() {\\n    println!(\\\"hello, world\\\");\\n}\",
    \"#include <iostream>\\n\\nint main(void) {\\n    std::cout << }y>}nn\\\"hello, world\\\" << std::endl;\\n    return 0;\\n}\",
    \"console.log(\\\"hello, world\\\");\",
    \"package main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n    fmt.Println(\\\"hello, world\\\")\\n}\",
    \"<?php\\necho \\\"hello, world\\\";\\n?>\",
    \"program hello;\\nbegin\\n    writeln('hello, world');\\nend.\",
    \"fun main() {\\n    println(\\\"hello, world\\\")\\n}\",
    \"print(\\\"hello, world\\\");\"
}"
                :type "char")
                nil [700 1340])
            ("gen_mod_" function
               (:arguments 
                  ( ("fptr" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1356 1368])
                    ("file_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1369 1391])
                    ("dir" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [1392 1410])
                    ("extens" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [1411 1430])
                    ("idx" variable
                       (:pointer 1
                        :constant-flag t
                        :type "int")
                        (reparse-symbol arg-sub-list) [1431 1452]))                  
                :type "void")
                nil [1342 2207])
            ("gen_" function
               (:arguments 
                  ( ("fptr" variable
                       (:pointer 2
                        :type ("FILE" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2219 2231])
                    ("file_name" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2232 2254])
                    ("extens" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [2255 2274])
                    ("idx" variable
                       (:pointer 1
                        :constant-flag t
                        :type "int")
                        (reparse-symbol arg-sub-list) [2275 2296]))                  
                :type "void")
                nil [2209 2447]))          
      :file "gen.c"
      :pointmax 2448
      :fsize 2439
      :lastmodtime '(26078 11693 768011 609000)
      :unmatched-syntax nil
      :lexical-table 
        '(("GO_MOD_SAMPLE" . ((string "\"module %s\\n\\ngo 1.22.0\"" 840 . 864)))
          ("SET_MOD" (spp-arg-list ("file" "dir" "content") 240 . 260) . ((symbol "snprintf" 261 . 269) (semantic-list "(file, FILE_CAP, \"%s/%s\", dir, content)" 269 . 308)))
          ("SET_SAMPLE" (spp-arg-list ("file" "file_name" "sample" "...") 968 . 998) . 
              ((DO "do" 999 . 1001) (semantic-list "{ \\
        _Pragma(\"GCC diagnostic ignored \\\"-Wformat-extra-args\\\"\") \\
        _Pragma(\"GCC diagnostic ignored \\\"-Wunused-value\\\"\") \\
        snprintf(file, FILE_CAP, sample, file_name, ##__VA_ARGS__); \\
    }" 1002 . 1212) (WHILE "while" 1213 . 1218) (semantic-list "(0)" 1219 . 1222)))
          ("CREATING" (spp-arg-list ("file_name" "extens" "content") 1239 . 1267) . 
              ((symbol "fprintf" 1268 . 1275) (semantic-list "(stdout, \"Creating %s.%s:\\n%s\\n\\n\", file_name, extens, content)" 1275 . 1338) (punctuation ";" 1338 . 1339)))
          ("TOML_MOD_SAMPLE" . ((string "\"[package]\\nname = \\\"%s\\\"\\nversion = \\\"0.1.0\\\"\\nedition = \\\"2021\\\"\\n\\n[dependencies]\\n\\n[[bin]]\\nname = \\\"%s\\\"\\npath = \\\"./%s.rs\\\"\"" 43 . 174)))
          )
))
  :file "!home!yarson!Coding!create!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
